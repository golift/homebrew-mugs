# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Unpoller < Formula
  desc "Polls a UniFi controller, exports metrics to InfluxDB, Prometheus and Datadog"
  homepage "https://unpoller.com/"
  version "2.7.5"
  license "MIT"

  on_macos do
    url "https://github.com/unpoller/unpoller/releases/download/v2.7.5/unpoller_2.7.5_darwin_all.tar.gz"
    sha256 "7050784a445561233db70e04de0f0f51df662bbc3bf282a58a7236a3d942c23c"

    def install
      bin.install "unpoller"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/unpoller/unpoller/releases/download/v2.7.5/unpoller_2.7.5_linux_amd64.tar.gz"
      sha256 "4b8096e48f9b445b949f3dfc27d1fdf2b1dcfbed55dc83a5177441e8d2fb2efa"

      def install
        bin.install "unpoller"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/unpoller/unpoller/releases/download/v2.7.5/unpoller_2.7.5_linux_arm64.tar.gz"
      sha256 "2233a06cca153665b21e3ed1440bded8e85fff8a5ec71a64b84e7df344c14fde"

      def install
        bin.install "unpoller"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/unpoller/unpoller/releases/download/v2.7.5/unpoller_2.7.5_linux_armv6.tar.gz"
      sha256 "5824adbc578830f5c0b34ae41547d3d594406684d08367e24de25be577ed8f61"

      def install
        bin.install "unpoller"
      end
    end
  end

  conflicts_with "unifi-poller"

  def caveats
    <<~EOS
      Edit the config file at #{etc}/unpoller/up.conf then start unpoller with brew services start unpoller ~ log file: #{var}/log/unpoller.log The manual explains the config file options: man unpoller
    EOS
  end

  plist_options startup: false

  def plist
    <<~EOS
      <?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
      <key>Label</key>
      <string>#{plist_name}</string>
      <key>ProgramArguments</key>
      <array>
          <string>#{bin}/unpoller</string>
          <string>--config</string>
          <string>#{etc}/unpoller/up.conf</string>
      </array>
      <key>RunAtLoad</key>
      <true/>
      <key>KeepAlive</key>
      <true/>
      <key>StandardErrorPath</key>
      <string>#{var}/log/unpoller.log</string>
      <key>StandardOutPath</key>
      <string>#{var}/log/unpoller.log</string>
  </dict>
</plist>

    EOS
  end

  test do
    assert_match "unpoller v#{version}", shell_output("#{bin}/unpoller -v 2>&1", 2)
  end
end
