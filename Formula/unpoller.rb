# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Unpoller < Formula
  desc "Polls a UniFi controller, exports metrics to InfluxDB, Prometheus and Datadog"
  homepage "https://unpoller.com/"
  version "2.11.0"
  license "MIT"

  on_macos do
    url "https://github.com/unpoller/unpoller/releases/download/v2.11.0/unpoller_2.11.0_darwin_all.tar.gz"
    sha256 "c0f647eb2b48437dacc200d6a1cc3668e13f67f899c54d75df493408aa51ff2e"

    def install
      bin.install "unpoller"
      etc.mkdir "unpoller"
      etc.install "examples/up.conf" => "unpoller/up.conf.example"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/unpoller/unpoller/releases/download/v2.11.0/unpoller_2.11.0_linux_amd64.tar.gz"
      sha256 "76db34878f73983816664e0ed81081ca4cd3f6a71bfdd5df2bcb5e211cc1a8d8"

      def install
        bin.install "unpoller"
        etc.mkdir "unpoller"
        etc.install "examples/up.conf" => "unpoller/up.conf.example"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/unpoller/unpoller/releases/download/v2.11.0/unpoller_2.11.0_linux_armv6.tar.gz"
      sha256 "50be69dc7eaa4c412d654beda645872997fb9c3d139ade0376c6fad74a8d7a42"

      def install
        bin.install "unpoller"
        etc.mkdir "unpoller"
        etc.install "examples/up.conf" => "unpoller/up.conf.example"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/unpoller/unpoller/releases/download/v2.11.0/unpoller_2.11.0_linux_arm64.tar.gz"
      sha256 "2555837be8cccb7b332caf4d0c507438935e1cea8143d5610c7d6c54732794b5"

      def install
        bin.install "unpoller"
        etc.mkdir "unpoller"
        etc.install "examples/up.conf" => "unpoller/up.conf.example"
      end
    end
  end

  conflicts_with "unifi-poller"

  def post_install
    etc.install "examples/up.conf" => "unpoller/up.conf"
  end

  def caveats
    <<~EOS
      Edit the config file at #{etc}/unpoller/up.conf then start unpoller with brew services start unpoller ~ log file: #{var}/log/unpoller.log The manual explains the config file options: man unpoller
    EOS
  end

  service do
    run [opt_bin/"unpoller", "--config", etc/"unpoller/up.conf"]
    keep_alive true
    log_path var/"log/unpoller.log"
    error_log_path var/"log/unpoller.log"
  end

  test do
    assert_match "unpoller v#{version}", shell_output("#{bin}/unpoller -v 2>&1", 2)
  end
end
