# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Unpoller < Formula
  desc "Polls a UniFi controller, exports metrics to InfluxDB, Prometheus and Datadog"
  homepage "https://unpoller.com/"
  version "2.9.2"
  license "MIT"

  on_macos do
    url "https://github.com/unpoller/unpoller/releases/download/v2.9.2/unpoller_2.9.2_darwin_all.tar.gz"
    sha256 "e4678565872840b48e10557df46a8b6c2119ff7bb53db9835b246230e98bb57c"

    def install
      bin.install "unpoller"
      etc.mkdir "unpoller"
      etc.install "examples/up.conf" => "unpoller/up.conf.example"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/unpoller/unpoller/releases/download/v2.9.2/unpoller_2.9.2_linux_amd64.tar.gz"
      sha256 "08696bbb037ccaacd8f42ae3d2c33f3ff57f2ccc91f39d1ff6ee555e3dc1a4df"

      def install
        bin.install "unpoller"
        etc.mkdir "unpoller"
        etc.install "examples/up.conf" => "unpoller/up.conf.example"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/unpoller/unpoller/releases/download/v2.9.2/unpoller_2.9.2_linux_arm64.tar.gz"
      sha256 "40a59b335ac2d0393f724d2dc053333670b59028c053ff95e521797077fd9ca5"

      def install
        bin.install "unpoller"
        etc.mkdir "unpoller"
        etc.install "examples/up.conf" => "unpoller/up.conf.example"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/unpoller/unpoller/releases/download/v2.9.2/unpoller_2.9.2_linux_armv6.tar.gz"
      sha256 "d3feb181943308bf4084dbf49786734c448054aea66b80d4b8fe6afe5903581e"

      def install
        bin.install "unpoller"
        etc.mkdir "unpoller"
        etc.install "examples/up.conf" => "unpoller/up.conf.example"
      end
    end
  end

  conflicts_with "unifi-poller"

  def post_install
    etc.install "examples/up.conf" => "unpoller/up.conf"
  end

  def caveats
    <<~EOS
      Edit the config file at #{etc}/unpoller/up.conf then start unpoller with brew services start unpoller ~ log file: #{var}/log/unpoller.log The manual explains the config file options: man unpoller
    EOS
  end

  service do
    run [opt_bin/"unpoller", "--config", etc/"unpoller/up.conf"]
    keep_alive true
    log_path var/"log/unpoller.log"
    error_log_path var/"log/unpoller.log"
  end

  test do
    assert_match "unpoller v#{version}", shell_output("#{bin}/unpoller -v 2>&1", 2)
  end
end
