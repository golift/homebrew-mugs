# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Unpoller < Formula
  desc "Polls a UniFi controller, exports metrics to InfluxDB, Prometheus and Datadog"
  homepage "https://unpoller.com/"
  version "2.12.0"
  license "MIT"

  on_macos do
    url "https://github.com/unpoller/unpoller/releases/download/v2.12.0/unpoller_2.12.0_darwin_all.tar.gz"
    sha256 "6c0ddd48aef10aa74267fb71632a292750c0980966b3d6c7a489ea0c6c429efb"

    def install
      bin.install "unpoller"
      etc.mkdir "unpoller"
      etc.install "examples/up.conf" => "unpoller/up.conf.example"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/unpoller/unpoller/releases/download/v2.12.0/unpoller_2.12.0_linux_amd64.tar.gz"
        sha256 "51b4b1dc5f117d4946dea60c16ff97dbee716c4b9d235ccd1d9853ee25a6ff25"

        def install
          bin.install "unpoller"
          etc.mkdir "unpoller"
          etc.install "examples/up.conf" => "unpoller/up.conf.example"
        end
      end
    end
    if Hardware::CPU.arm?
      if !Hardware::CPU.is_64_bit?
        url "https://github.com/unpoller/unpoller/releases/download/v2.12.0/unpoller_2.12.0_linux_armv6.tar.gz"
        sha256 "4fb4817fa3bc22626001866f91fdda9313f1ca9e6748ca94eb7c7f37a0138055"

        def install
          bin.install "unpoller"
          etc.mkdir "unpoller"
          etc.install "examples/up.conf" => "unpoller/up.conf.example"
        end
      end
    end
    if Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/unpoller/unpoller/releases/download/v2.12.0/unpoller_2.12.0_linux_arm64.tar.gz"
        sha256 "8a5e9a398bdd61e6d334c4fc60c54f7adfaad879046abd1b35e168fd06933e2a"

        def install
          bin.install "unpoller"
          etc.mkdir "unpoller"
          etc.install "examples/up.conf" => "unpoller/up.conf.example"
        end
      end
    end
  end

  conflicts_with "unifi-poller"

  def post_install
    etc.install "examples/up.conf" => "unpoller/up.conf"
  end

  def caveats
    <<~EOS
      Edit the config file at #{etc}/unpoller/up.conf then start unpoller with brew services start unpoller ~ log file: #{var}/log/unpoller.log The manual explains the config file options: man unpoller
    EOS
  end

  service do
    run [opt_bin/"unpoller", "--config", etc/"unpoller/up.conf"]
    keep_alive true
    log_path var/"log/unpoller.log"
    error_log_path var/"log/unpoller.log"
  end

  test do
    assert_match "unpoller v#{version}", shell_output("#{bin}/unpoller -v 2>&1", 2)
  end
end
