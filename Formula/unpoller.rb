# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Unpoller < Formula
  desc "Polls a UniFi controller, exports metrics to InfluxDB, Prometheus and Datadog"
  homepage "https://unpoller.com/"
  version "2.8.2"
  license "MIT"

  on_macos do
    url "https://github.com/unpoller/unpoller/releases/download/v2.8.2/unpoller_2.8.2_darwin_all.tar.gz"
    sha256 "cd03c9f9430da99474c3dc625542a0e5e1463adecd1766db5af98de40bdd4e3d"

    def install
      bin.install "unpoller"
      etc.mkdir "unpoller"
      etc.install "examples/up.conf" => "unpoller/up.conf.example"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/unpoller/unpoller/releases/download/v2.8.2/unpoller_2.8.2_linux_amd64.tar.gz"
      sha256 "77aa56b7cc1b88dc95f085d1b9c6ea78cec4a5ce1731c38a65f7f45a840eaf55"

      def install
        bin.install "unpoller"
        etc.mkdir "unpoller"
        etc.install "examples/up.conf" => "unpoller/up.conf.example"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/unpoller/unpoller/releases/download/v2.8.2/unpoller_2.8.2_linux_arm64.tar.gz"
      sha256 "e2f1684e8d5e19c2e49040e11ae23a5e2ce921a1084f5cb74af959e00e6ce13d"

      def install
        bin.install "unpoller"
        etc.mkdir "unpoller"
        etc.install "examples/up.conf" => "unpoller/up.conf.example"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/unpoller/unpoller/releases/download/v2.8.2/unpoller_2.8.2_linux_armv6.tar.gz"
      sha256 "cb3764c8c2d237e90ce075b0c0a39d9faa101f309de1f983b0d2f8b44b26adc3"

      def install
        bin.install "unpoller"
        etc.mkdir "unpoller"
        etc.install "examples/up.conf" => "unpoller/up.conf.example"
      end
    end
  end

  conflicts_with "unifi-poller"

  def post_install
    etc.install "examples/up.conf" => "unpoller/up.conf"
  end

  def caveats
    <<~EOS
      Edit the config file at #{etc}/unpoller/up.conf then start unpoller with brew services start unpoller ~ log file: #{var}/log/unpoller.log The manual explains the config file options: man unpoller
    EOS
  end

  service do
    run [opt_bin/"unpoller", "--config", etc/"unpoller/up.conf"]
    keep_alive true
    log_path var/"log/unpoller.log"
    error_log_path var/"log/unpoller.log"
  end

  test do
    assert_match "unpoller v#{version}", shell_output("#{bin}/unpoller -v 2>&1", 2)
  end
end
