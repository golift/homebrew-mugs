# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Unpoller < Formula
  desc "Polls a UniFi controller, exports metrics to InfluxDB, Prometheus and Datadog"
  homepage "https://unpoller.com/"
  version "2.13.0"
  license "MIT"

  on_macos do
    url "https://github.com/unpoller/unpoller/releases/download/v2.13.0/unpoller_2.13.0_darwin_all.tar.gz"
    sha256 "200faaea29ffb16c29273e8dadaa4c3036867878b3c2a5b9a0b14e5afa6e5a9f"

    def install
      bin.install "unpoller"
      etc.mkdir "unpoller"
      etc.install "examples/up.conf" => "unpoller/up.conf.example"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/unpoller/unpoller/releases/download/v2.13.0/unpoller_2.13.0_linux_amd64.tar.gz"
        sha256 "570121f1cc66cf65df506f1d54b16571d8e25cfff1fda32638a0537be0187895"

        def install
          bin.install "unpoller"
          etc.mkdir "unpoller"
          etc.install "examples/up.conf" => "unpoller/up.conf.example"
        end
      end
    end
    if Hardware::CPU.arm?
      if !Hardware::CPU.is_64_bit?
        url "https://github.com/unpoller/unpoller/releases/download/v2.13.0/unpoller_2.13.0_linux_armv6.tar.gz"
        sha256 "f052d60e31b0312eab9d905961e3ab25227f6c8832636a2a72501bc3501e21bd"

        def install
          bin.install "unpoller"
          etc.mkdir "unpoller"
          etc.install "examples/up.conf" => "unpoller/up.conf.example"
        end
      end
    end
    if Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/unpoller/unpoller/releases/download/v2.13.0/unpoller_2.13.0_linux_arm64.tar.gz"
        sha256 "017e9953de9caf26c7de3856507a099f916e9b519d47fc3c0d31995c52b62cbd"

        def install
          bin.install "unpoller"
          etc.mkdir "unpoller"
          etc.install "examples/up.conf" => "unpoller/up.conf.example"
        end
      end
    end
  end

  conflicts_with "unifi-poller"

  def post_install
    etc.install "examples/up.conf" => "unpoller/up.conf"
  end

  def caveats
    <<~EOS
      Edit the config file at #{etc}/unpoller/up.conf then start unpoller with brew services start unpoller ~ log file: #{var}/log/unpoller.log The manual explains the config file options: man unpoller
    EOS
  end

  service do
    run [opt_bin/"unpoller", "--config", etc/"unpoller/up.conf"]
    keep_alive true
    log_path var/"log/unpoller.log"
    error_log_path var/"log/unpoller.log"
  end

  test do
    assert_match "unpoller v#{version}", shell_output("#{bin}/unpoller -v 2>&1", 2)
  end
end
